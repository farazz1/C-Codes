#include <iostream>
using namespace std;

class TicTacToe{
    private:
    int board[3][3];
    public:
    TicTacToe(){
        for(int i=0;i<3;i++){
            for(int j=0;j<3;j++){
                board[i][j] = 0;
            }
        }
    }
    
    void clearBoard(){
        for(int i=0;i<3;i++){
            for(int j=0;j<3;j++){
                board[i][j] = 0;
            }
        }
    }

    bool move(int player, int row, int col) {
        if (row < 0 || row >= 3 || col < 0 || col >= 3 || board[row][col] != 0) {
            return false; 
        }

        board[row][col] = player;
        return true;
    }

    void to_string() const {
        for (int i = 0; i < 3; ++i) {
            for (int j = 0; j < 3; ++j) {
                cout << board[i][j];
                if (j < 2) {
                    cout << " | ";
                }
            }
            cout << endl;
            if (i < 2) {
                cout << "-----------" << endl;
            }
        }
    }

    int gameStatus() const {
        // Check rows and columns
        for (int i = 0; i < 3; ++i) {
            if ((board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][0] != 0) ||
                (board[0][i] == board[1][i] && board[1][i] == board[2][i] && board[0][i] != 0)) {
                return board[i][i];
            }
        }

        // Check diagonals
        if ((board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[0][0] != 0) ||
            (board[0][2] == board[1][1] && board[1][1] == board[2][0] && board[0][2] != 0)) {
            return board[1][1];
        }

        // Check for a draw
        for (int i = 0; i < 3; ++i) {
            for (int j = 0; j < 3; ++j) {
                if (board[i][j] == 0) {
                    return 0; // Game is not over yet
                }
            }
        }

        return 3; // Draw
    }

};

int main() {
    TicTacToe game;
    int currentPlayer = 1;

    cout << "Welcome to Tic-Tac-Toe!" << endl;

    while (true) {
        cout << "Player " << currentPlayer << " move: enter row and column: ";
        int row, col;
        cin >> row >> col;

        if (game.move(currentPlayer, row, col)) {
            game.to_string();
            int status = game.gameStatus();

            if (status == 1 || status == 2) {
                cout << "Player " << status << " wins!" << endl;
                break;
            } else if (status == 3) {
                cout << "It's a draw!" << endl;
                break;
            }

            currentPlayer = (currentPlayer == 1) ? 2 : 1;
        } else {
            cout << "Invalid move. Try again." << endl;
        }
    }

    return 0;
}